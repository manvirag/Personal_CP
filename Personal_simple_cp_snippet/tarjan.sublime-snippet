<snippet>
	<content><![CDATA[
vector<int> g[N];
vector<int> visi(N),low(N),ids(N);
vector<pair<int,int>> bridge;
set<int>ap;
ll id;
void dfs(int i,int p){
  visi[i]=1;
  ++id;
  low[i]=id;
  ids[i]=id;
  
  for(auto x: g[i]){
  
   if(p==x)
    continue;

    if(!visi[x])
     {  dfs(x,i);
        low[i]=min(low[i],low[x]);
       if(low[x]>ids[i])            
       {     
           ap.insert(i);
           ap.insert(x);
          bridge.pb({i,x});
        }
    }
    else
      low[i]=min(low[i],ids[x]);   
   }

}
void dfs2(int i ,int par){

   col[i] = colour;
   visi[i] = true;
   for(auto x: g[i]){
        if(x==par) continue;
        if(visi[x]) continue;
        if(bridge.find({i,x}) == bridge.end() && bridge.find({x,i})==bridge.end()){
          dfs2(x,i);
        }
   }
}
/*

 for(int i=0;i<n;i++){
          if(!visi[i]) {
            dfs2(i,-1);
            colour++;
          }
            
        }

vector<int> btree[colour];
for(int i=0;i<n;i++){
  for(auto x: g[i]){
    if(col[i]!=col[x]){
      btree[col[i]].push_back(col[x]);
    }
  }
}


*/
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>tarjan</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
